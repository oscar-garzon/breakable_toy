{"ast":null,"code":"var _jsxFileName = \"/Users/oscar.garzon/Documents/breakable_toy_chidisimo/front-end/src/components/ToDolist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Snackbar } from '@mui/material';\nimport AddToDo from './AddToDo.js';\nimport { SERVER_URL } from '../constants.js';\nimport EditToDo from './EditToDo';\nimport DoneToDo from './DoneToDo.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDolist() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [rowCountState, setRowCountState] = useState(5);\n  const [todos, setTodos] = useState([]);\n  const columns = [{\n    field: 'done',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(DoneToDo, {\n      id: row.id,\n      doneTodo: done_undone_Todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'text',\n    headerName: 'Text',\n    width: 200\n  }, {\n    field: 'priority',\n    headerName: 'Priority',\n    width: 200\n  }, {\n    field: 'due_date',\n    headerName: 'Due Date',\n    width: 200\n  }, {\n    field: '_links.todos.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(EditToDo, {\n      data: row,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: '_links.self.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelClick(row.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this)\n  }];\n  useEffect(() => {\n    fetchToDos();\n  }, []);\n  const fetchToDos = () => {\n    fetch(SERVER_URL + 'todos').then(response => response.json()).then(data => setTodos(data._embedded.toDoList)).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete?\")) {\n      fetch(url, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.ok) {\n          fetchToDos();\n          setOpen(true);\n        } else {\n          alert('Something went wrong!');\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n\n  // Add a new todo\n  const addTodo = todo => {\n    fetch(SERVER_URL + 'todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo)\n    }).then(response => {\n      if (response.ok) {\n        fetchToDos();\n      } else {\n        alert(\"Something went wrong!\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const updateTodo = (todo, link) => {\n    fetch(link, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo)\n    }).then(response => {\n      if (response.ok) {\n        fetchToDos();\n      } else {\n        alert('Something went wrong!');\n      }\n    }).catch(err => console.error(err));\n  };\n  const done_undone_Todo = link => {\n    fetch(link, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        fetchToDos();\n      } else {\n        alert('Something went wrong!');\n      }\n    }).catch(err => console.error(err));\n  };\n  const setPaginationModel = () => {\n    console.log(\"holi\");\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddToDo, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: todos,\n        columns: columns,\n        paginationMode: \"server\",\n        rowCount: rowCountState,\n        onPaginationModelChange: setPaginationModel,\n        getRowId: row => row._links.self.href,\n        disableSelectionOnClick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 2000,\n        onClose: () => setOpen(false),\n        message: \"Task deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDolist, \"+yRa5Js4Xwx6vtog97+qZpnfuFY=\");\n_c = ToDolist;\nexport default ToDolist;\nvar _c;\n$RefreshReg$(_c, \"ToDolist\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","Snackbar","AddToDo","SERVER_URL","EditToDo","DoneToDo","jsxDEV","_jsxDEV","ToDolist","_s","open","setOpen","rowCountState","setRowCountState","todos","setTodos","columns","field","headerName","sortable","filterable","renderCell","row","id","doneTodo","done_undone_Todo","fileName","_jsxFileName","lineNumber","columnNumber","width","data","updateTodo","onClick","onDelClick","children","fetchToDos","fetch","then","response","json","_embedded","toDoList","catch","err","console","error","url","window","confirm","method","ok","alert","addTodo","todo","headers","body","JSON","stringify","link","setPaginationModel","log","Fragment","style","height","rows","paginationMode","rowCount","onPaginationModelChange","getRowId","_links","self","href","disableSelectionOnClick","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/Users/oscar.garzon/Documents/breakable_toy_chidisimo/front-end/src/components/ToDolist.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Snackbar } from '@mui/material';\n\nimport AddToDo from './AddToDo.js';\nimport { SERVER_URL } from '../constants.js'\nimport EditToDo from './EditToDo';\nimport DoneToDo from './DoneToDo.js';\n\nfunction ToDolist() {\n    const [open, setOpen] = useState(false);\n    const [rowCountState, setRowCountState] = useState(5);\n    const [todos, setTodos] = useState([]);\n    const columns = [\n        {\n            field: 'done',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row =>\n                <DoneToDo\n                    id={row.id}\n                    doneTodo={done_undone_Todo} />\n        },\n        {field: 'text', headerName: 'Text', width: 200},\n        {field: 'priority', headerName: 'Priority', width: 200},\n        {field: 'due_date', headerName: 'Due Date', width: 200},\n        {\n            field: '_links.todos.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row =>\n                <EditToDo\n                    data={row}\n                    updateTodo={updateTodo} />\n        },\n        {\n            field: '_links.self.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row =>\n              <button\n                 onClick={() => onDelClick(row.id)}>Delete\n              </button>\n        }\n    ];\n    useEffect(() => {\n        fetchToDos();\n    }, []);       \n      \n    const fetchToDos = () => {\n    fetch(SERVER_URL + 'todos')\n    .then(response => response.json())\n    .then(data => setTodos(data._embedded.toDoList))\n    .catch(err => console.error(err));    \n    }\n\n    const onDelClick = (url) => {\n        if (window.confirm(\"Are you sure to delete?\")) {\n        fetch(url,  {method:  'DELETE'})\n        .then(response => {\n            if (response.ok) { \n                fetchToDos();\n                setOpen(true);\n            }\n            else {\n                alert('Something went wrong!');\n            }\n        })    \n        .catch(err => console.error(err))\n      }\n    }\n\n    // Add a new todo\n    const addTodo = (todo) => {\n        fetch(SERVER_URL + 'todos',\n        {\n            method: 'POST',\n            headers: { 'Content-Type':'application/json' },\n            body: JSON.stringify(todo)\n        })\n        .then(response => {\n            if(response.ok) {\n                fetchToDos();\n            }\n            else{\n                alert(\"Something went wrong!\");\n            }\n        })\n        .catch(err => console.error(err))\n    }\n\n    const updateTodo = (todo, link) => {\n        fetch(link,\n            {\n                method: 'PUT',\n                headers: { 'Content-Type':  'application/json' },\n                body: JSON.stringify(todo)\n            })\n            .then(response => {\n                if(response.ok) {\n                    fetchToDos();\n                }\n                else {\n                    alert('Something went wrong!');\n                }\n            })\n            .catch(err => console.error(err))\n    }\n\n    const done_undone_Todo = (link) => {\n        fetch(link,\n            {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' }\n            })\n            .then(response => {\n                if(response.ok){\n                    fetchToDos();\n                }\n                else {\n                    alert('Something went wrong!');\n                }\n            })\n            .catch(err => console.error(err))\n    }\n\n    const setPaginationModel = () => {\n        console.log(\"holi\");\n    }\n\n    return(\n        <React.Fragment>\n            <AddToDo addTodo={addTodo} />\n            <div style={{ height: 500, width: '100%' }}>\n                <DataGrid\n                    rows={todos}\n                    columns={columns}\n                    paginationMode=\"server\"\n                    rowCount={rowCountState}\n                    onPaginationModelChange={setPaginationModel}\n                    getRowId={row => row._links.self.href}\n                    disableSelectionOnClick/>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={() => setOpen(false)}\n                    message=\"Task deleted\"\n                />\n            </div>\n        </React.Fragment>\n    );\n}\nexport default ToDolist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}